"""
Module: MyList (1-my_list)

Introduction:
--------------
The MyList module provides a custom list class with enhanced functionality.

Usage:
------
1. Import the MyList class from the module:
    >>> MyList = __import__('1-my_list').MyList

Class Type and Instance Tests:
-------------------------------
Create an instance of MyList and check its type and instance:
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True

Check if the instance is also an instance of the built-in list class:
    >>> isinstance(my_list, list)
    True

Method Type and Invocation Tests:
----------------------------------
Check if the print_sorted method is an instance method:
    >>> type(MyList.__dict__['print_sorted'])
    <class 'function'>

Attempt to call print_sorted via the class without arguments:
    >>> MyList.print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'

Attempt to call print_sorted with one argument:
    >>> my_list.print_sorted([4, 2, 5])
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Attempt to call print_sorted with two arguments:
    >>> my_list.print_sorted([4, 2, 5], 1)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 3 were given

Functionality Tests:
---------------------
Check print_sorted with an empty list:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Check print_sorted with a normal list:
    >>> my_list = MyList([2, 10, 1])
    >>> my_list.print_sorted()
    [1, 2, 10]

Check print_sorted with another normal list:
    >>> my_list = MyList([1, 4, 2, 3, 5])
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Check print_sorted with a list of negative integers:
    >>> my_list = MyList([-1000, -98, -232565, 0, -23423434, -123])
    >>> my_list.print_sorted()
    [-23423434, -232565, -1000, -123, -98, 0]

Check that the original list remains unchanged after calling print_sorted:
    >>> my_list = MyList([2, 10, 1, -10, 20, 100, 0])
    >>> my_list.print_sorted()
    [-10, 0, 1, 2, 10, 20, 100]
    >>> my_list
    [2, 10, 1, -10, 20, 100, 0]

Check print_sorted with a list already in ascending order:
    >>> my_list = MyList([-10, 0, 1, 2, 10, 20, 100])
    >>> my_list.print_sorted()
    [-10, 0, 1, 2, 10, 20, 100]

Append Test:
------------
Check the append method to add an element to the list:
    >>> my_list = MyList()
    >>> my_list.append(10)
    >>> my_list
    [10]
"""
